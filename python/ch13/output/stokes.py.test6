solving on 3 x 3 grid with P^2 x P^1 Taylor-Hood elements ...
usage: stokes.py [-analytical] [-dp] [-lidscale X] [-mesh INNAME] [-mx MX]
                 [-my MY] [-mu MU] [-nobase] [-o OUTNAME] [-pdegree L] [-quad]
                 [-refine R] [-schurgmg PKG] [-showinfo] [-stokeshelp]
                 [-udegree K]

Solve a linear Stokes problem in 2D.  Three problem cases:
  1. Lid-driven cavity with quadratic velocity on lid and Dirichlet conditions
     on all sides and a null space of constant pressures.  The default problem.
  2. (-analytical) Analytical exact solution from Logg et al (2012).
  3. (-nobase) Same as 1. but with stress-free condition on bottom so the null
     space is trivial.
Uses mixed FE method, either Taylor-Hood family (P^k x P^l, or Q^k x Q^l with
-quad) or CD with discontinuous pressure; defaults to P^2 x P^1.  Uses either
uniform mesh or reads a mesh in Gmsh format.  Serves as an example of a
saddle-point system.  See the code for Schur+GMG based PC packages:
  -schurgmg diag|diag_mass|lower|lower_mass
The prefix for PETSC solver options is 's_'.  Use -help for PETSc options
and -stokeshelp for options to stokes.py.

optional arguments:
  -analytical    use problem with exact solution
  -dp            use discontinuous-Galerkin finite elements for pressure
  -lidscale X    scale for lid velocity (rightward positive; default=1.0)
  -mesh INNAME   input file for mesh in Gmsh format (.msh)
  -mx MX         number of grid points in x-direction (uniform case)
  -my MY         number of grid points in y-direction (uniform case)
  -mu MU         dynamic viscosity (default=1.0)
  -nobase        use problem with stress-free boundary condition on base
  -o OUTNAME     output file name ending with .pvd
  -pdegree L     polynomial degree for pressure (default=1)
  -quad          use quadrilateral finite elements
  -refine R      number of refinement levels (e.g. for GMG)
  -schurgmg PKG  choose a Schur+GMG PC solver package: see text for options
  -showinfo      print function space sizes and solution norms (useful for testing)
  -stokeshelp    help for stokes.py options
  -udegree K     polynomial degree for velocity (default=2)
